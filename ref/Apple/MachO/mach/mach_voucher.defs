/*
 * Copyright (c) 2013 Apple Computer, Inc. All rights reserved.
 *
 * @APPLE_OSREFERENCE_LICENSE_HEADER_START@
 * 
 * This file contains Original Code and/or Modifications of Original Code
 * as defined in and that are subject to the Apple Public Source License
 * Version 2.0 (the 'License'). You may not use this file except in
 * compliance with the License. The rights granted to you under the License
 * may not be used to create, or enable the creation or redistribution of,
 * unlawful or unlicensed copies of an Apple operating system, or to
 * circumvent, violate, or enable the circumvention or violation of, any
 * terms of an Apple operating system software license agreement.
 * 
 * Please obtain a copy of the License at
 * http://www.opensource.apple.com/apsl/ and read it before using this file.
 * 
 * The Original Code and all software distributed under the License are
 * distributed on an 'AS IS' basis, WITHOUT WARRANTY OF ANY KIND, EITHER
 * EXPRESS OR IMPLIED, AND APPLE HEREBY DISCLAIMS ALL SUCH WARRANTIES,
 * INCLUDING WITHOUT LIMITATION, ANY WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, QUIET ENJOYMENT OR NON-INFRINGEMENT.
 * Please see the License for the specific language governing rights and
 * limitations under the License.
 * 
 * @APPLE_OSREFERENCE_LICENSE_HEADER_END@
 */

subsystem
#if	KERNEL_SERVER
	  KernelServer
#endif	/* KERNEL_SERVER */
		       mach_voucher 5400;

#include <mach/std_types.defs>
#include <mach/mach_types.defs>

/* extract just the content data for a <voucher, key> pair */
routine mach_voucher_extract_attr_content(
		voucher		: ipc_voucher_t;
		key		: mach_voucher_attr_key_t;
	out	content		: mach_voucher_attr_content_t, CountInOut);

/* extract a recipe to reconstitue a <voucher, key> pair item in a future voucher */
#if !KERNEL && !LIBSYSCALL_INTERFACE
routine _kernelrpc_mach_voucher_extract_attr_recipe(
#else
routine mach_voucher_extract_attr_recipe(
#endif
		voucher		: ipc_voucher_t;
		key		: mach_voucher_attr_key_t;
	out	recipe		: mach_voucher_attr_raw_recipe_t, CountInOut);

/* extract a recipe array to reconstitue all the key values in a future voucher */
routine mach_voucher_extract_all_attr_recipes(	
		voucher		: ipc_voucher_t;
	out	recipes		: mach_voucher_attr_raw_recipe_array_t, CountInOut);

/* execute a command against a given voucher attribute */
routine mach_voucher_attr_command(
		voucher		: ipc_voucher_t;
		key		: mach_voucher_attr_key_t;
		command		: mach_voucher_attr_command_t;
		in_content	: mach_voucher_attr_content_t;
	out	out_content	: mach_voucher_attr_content_t, CountInOut);

/* extract a recipe array to reconstitue all the key values in a future voucher */
routine mach_voucher_debug_info(
		task		: ipc_space_read_t;
		voucher_name: mach_port_name_t;
	out	recipes		: mach_voucher_attr_raw_recipe_array_t, CountInOut);

/* vim: set ft=c : */
