/*
 * Copyright (c) 2000 Apple Computer, Inc. All rights reserved.
 *
 * @APPLE_OSREFERENCE_LICENSE_HEADER_START@
 * 
 * This file contains Original Code and/or Modifications of Original Code
 * as defined in and that are subject to the Apple Public Source License
 * Version 2.0 (the 'License'). You may not use this file except in
 * compliance with the License. The rights granted to you under the License
 * may not be used to create, or enable the creation or redistribution of,
 * unlawful or unlicensed copies of an Apple operating system, or to
 * circumvent, violate, or enable the circumvention or violation of, any
 * terms of an Apple operating system software license agreement.
 * 
 * Please obtain a copy of the License at
 * http://www.opensource.apple.com/apsl/ and read it before using this file.
 * 
 * The Original Code and all software distributed under the License are
 * distributed on an 'AS IS' basis, WITHOUT WARRANTY OF ANY KIND, EITHER
 * EXPRESS OR IMPLIED, AND APPLE HEREBY DISCLAIMS ALL SUCH WARRANTIES,
 * INCLUDING WITHOUT LIMITATION, ANY WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, QUIET ENJOYMENT OR NON-INFRINGEMENT.
 * Please see the License for the specific language governing rights and
 * limitations under the License.
 * 
 * @APPLE_OSREFERENCE_LICENSE_HEADER_END@
 */
/*
 * @OSF_COPYRIGHT@
 */
/*
 * 	File:		mach/clock_priv.defs
 *	Purpose:	Kernel clock subsystem definitions. This
 *			file defines the clock request interface.
 */

subsystem
#if	KERNEL_SERVER
	  KernelServer
#endif	/* KERNEL_SERVER */
		       clock_priv 1200;

#include <mach/std_types.defs>
#include <mach/mach_types.defs>
#include <mach/clock_types.defs>

/*
 * References to clock_priv objects are returned by:
 *	host_get_clock_control(host_priv_t,...) - Priviledged subclass
 */

/*
 *	Set the clock time.
 *	Privileged.
 */
routine	clock_set_time(
		clock_ctrl	: clock_ctrl_t;
		new_time	: mach_timespec_t);

/*
 *	Set clock attributes.
 *	Privileged.
 */
routine	clock_set_attributes(
		clock_ctrl	: clock_ctrl_t;
	in	flavor		: clock_flavor_t;
	in	clock_attr	: clock_attr_t);

/* vim: set ft=c : */
