- Add option to sbtype, so within [sblaster] section the user can enter sbtype=sbawe32 or sbtype=sbawe64
- Add option to [sblaster] section to allow the user to control how much onboard RAM (if any) is on the card
- TODO: Is the SBAWE Plug and Play? Are there non-PnP versions of the card? What PnP IDs does the card have?
- Plug in the SBAWE32 card you have in your pile o'cards and use some of the programming documentation out
  there to write a program that dumps off the ROM MIDI set on the cards (there is one, right?), then add code
  to DOSBox-X so that it can use the ROM dump as part of the EMU8000 memory map.
- In DOSLIB: Write a proof-of-concept program that detects the AWE's EMU8000 chip, initializes it, and plays
  a sound, allows the user to fiddle with it, dump register state, etc.
- In DOSBox-X: Add basic EMU8000 emulation with wavetable synthesis to the Sound Blaster emulation, which
  of course is only enabled when you specify sbtype=sbawe32. First see if your proof-of-concept program works
  with your emulation. Then, dig up whatever DOS games you can find and configure them for SB AWE audio and
  see if they work too. Prepare for lots of tweaking, troubleshooting, and asking others on the Vogons forums
  to confirm results, etc.
- Be prepared to abort the start of this project if some other branch has already implemented SB AWE emulation,
  or to incorporate code from the other branch if someone has already started it.
- Can you figure out the "effects engine"? Figure out what those filter parameters mean?

